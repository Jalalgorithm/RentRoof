@page "/myprofile"
@inject IAccountService accountService
@inject AuthenticationStateProvider AuthenticationStateProvider

@attribute [Authorize]

<div class="bg-light">
    <div class="container">
        <div class="row d-flex justify-content-center">
            <div class="col-md-10 mt-5 pt-5">
                <div class="row shadow-lg">
                    <div class="col-sm-4 bg-info rounded-left">
                        <div class="card-block text-center text-white">
                            <i class="fas fa-user-tie fa-7x mt-5"></i>
                            <h2 class="fw-bold mt-4">@FirstName</h2>
                            <p>@userProfile.Address</p>
                            <i class="far fa-edit fa-2x mb-4"></i>
                        </div>
                    </div>
                    <div class="col-sm-8 bg-white rounded-right">
                        <h3 class="mt-3 text-center">Information</h3>
                        <hr class="badge-primary mt-0 w-25" />
                        <div class="row">
                            <div class="col-sm-6">
                                <p class="fw-bold">Email:</p>
                                <h6 class="text-muted">@DisplayEmail</h6>
                            </div>
                            <div class="col-sm-6">
                                <p class="fw-bold">Phone</p>
                                <h6 class="text-muted">@DisplayPhone</h6>
                            </div>
                        </div>
                        <h4 class="mt-3">Projects</h4>
                        <hr class="bg-primary" />
                        <div class="row">
                            <div class="col-sm-6">
                                <p class="fw-bold">Other Names</p>
                                <h6 class="text-muted">@DisplayLastName</h6>
                            </div>
                            <div class="col-sm-6">
                                <p class="fw-bold">Address</p>
                                <h6 class="text-muted">@DisplayAddress</h6>
                            </div>
                        </div>
                        <hr class="bg-primary" />
                        <ul class="list-unstyled d-flex justify-content-center mt-4">
                            <li><a href="#"><i class="fab fa-facebook-f px-3 h4 text-info"></i></a></li>
                            <li><a href="#"><i class="fab fa-youtube px-3 h4 text-info"></i></a></li>
                            <li><a href="#"><i class="fab fa-twitter px-3 h4 text-info"></i></a></li>

                        </ul>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>


@code {
    UserResponseDTO userProfile = new();
    AgentProfileDTO agentProfile = new();
    private ClaimsPrincipal user;
    private string role;

    protected async override Task OnInitializedAsync()
    {

        var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        user = authState.User;
        role = user.Claims.FirstOrDefault(c => c.Type == ClaimTypes.Role)?.Value!;

        await GetData();
    }

    public async Task GetData()
    {

        if(role=="Agent")
        {
            agentProfile = await accountService.GetAgentProfile();
        }

        if(role=="Client")
        {
            userProfile = await accountService.GetProfile();
        }



    }

    private string FirstName => role == "Agent" ? agentProfile.FirstName : userProfile.FirstName;
    private string LastName => role == "Agent" ? agentProfile.LastName : userProfile.LastName;
    private string DisplayAddress => role == "Agent" ? agentProfile.Address : userProfile.Address;
    private string DisplayEmail => role == "Agent" ? agentProfile.Email : userProfile.Email;
    private string DisplayPhone => role == "Agent" ? agentProfile.PhoneNumber : userProfile.Phone;
    private string DisplayLastName => role == "Agent" ? agentProfile.LastName : userProfile.LastName;

}
